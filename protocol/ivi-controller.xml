<?xml version="1.0" encoding="UTF-8"?>
<protocol name="ivi_controller">

    <copyright>
    Copyright (C) 2013 DENSO CORPORATION
    Copyright (c) 2013 BMW Car IT GmbH

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
    </copyright>

    <interface name="ivi_controller_surface" version="1">
        <description summary="Request property change of ivi_surface to server"/>

        <request name="set_visibility">
            <description summary="Set Visibility"/>
            <arg name="visibility" type="uint"/>
        </request>

        <request name="set_opacity">
            <description summary="Set Opacity"/>
            <arg name="opacity" type="fixed"/>
        </request>

        <request name="set_source_rectangle">
            <description summary="Set the area of wl_surface which should be used for the rendering">
                x:      horizontal start position of the used area
                y:      vertical start position of the used area
                width : width of the area
                height: height of the area
            </description>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </request>

        <request name="set_destination_rectangle">
            <description summary="Set the destination area of a surface within a layer for rendering">
                Set the destination area of a wl_surface within a layer for rendering. The surface will be scaled to this rectangle for rendering.
                x:      horizontal start position of the used area
                y:      vertical start position of the used area
                width : width of the area
                height: height of the area
            </description>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </request>

        <request name="set_configuration">
            <description summary="request new buffer size for application content"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </request>

        <request name="set_orientation">
            <description summary="Set Orientation"/>
            <arg name="orientation" type="int"/>
        </request>

        <request name="screenshot">
            <description summary="Take screenshot"/>
            <arg name="filename" type="string"/>
        </request>

        <event name="visibility">
            <description summary="sent in response to set_visibility"/>
            <arg name="visibility" type="int"/>
        </event>

        <event name="opacity">
            <description summary="sent in response to set_opacity"/>
            <arg name="opacity" type="fixed"/>
        </event>

        <event name="source_rectangle">
            <description summary="sent in response to set_source_rectangle"/>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </event>

        <event name="destination_rectangle">
            <description summary="sent in response to set_destination_rectangle"/>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </event>

        <event name="configuration">
            <description summary="sent in response to set_configuration"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </event>

        <enum name="orientation">
            <description summary="orientation presets in degrees"/>
            <entry name="0_degrees" value="0"
             summary="not rotated"/>
            <entry name="90_degrees" value="1"
             summary="rotated 90 degrees clockwise"/>
            <entry name="180_degrees" value="2"
             summary="rotated 180 degrees clockwise"/>
            <entry name="270_degrees" value="3"
             summary="rotated 270 degrees clockwise"/>
        </enum>

        <event name="orientation">
            <description summary="sent in response to set_orientation"/>
            <arg name="orientation" type="int"/>
        </event>

        <enum name="pixelformat">
            <description summary="pixel format values"/>
            <entry name="r_8" value="0"
             summary="8 bit luminance surface"/>
            <entry name="rgb_888" value="1"
             summary="24 bit rgb surface"/>
            <entry name="rgba_8888" value="2"
             summary="24 bit rgb surface with 8 bit alpha"/>
            <entry name="rgb_565" value="3"
             summary="16 bit rgb surface"/>
            <entry name="rgba_5551" value="4"
             summary="16 bit rgb surface with binary mask"/>
            <entry name="rgba_6661" value="5"
             summary="18 bit rgb surface with binary mask"/>
            <entry name="rgba_4444" value="6"
             summary="12 bit rgb surface with 4 bit alpha"/>
            <entry name="unknown" value="7"
             summary="unknown"/>
        </enum>

        <event name="pixelformat">
            <description summary="pixelformat"/>
            <arg name="pixelformat" type="int"/>
        </event>

        <event name="layer">
            <description summary="Receive a ivi_layer this ivi_surface belongs"/>
            <arg name="layer" type="object" interface="ivi_controller_layer" allow-null="true"/>
        </event>

        <request name="send_stats"/>

        <event name="stats">
            <description summary="sent in response to send_stats"/>
            <arg name="redraw_count" type="uint"/>
            <arg name="frame_count" type="uint"/>
            <arg name="update_count" type="uint"/>
            <arg name="pid" type="uint"/>
            <arg name="process_name" type="string" allow-null="true"/>
        </event>

        <request name="destroy" type="destructor">
            <description summary="destroy ivi_controller_surface"/>
            <arg name="destroy_scene_object" type="int"/>
        </request>

        <event name="destroyed">
            <description summary="destroyed surface event"/>
        </event>

        <enum name="content_state">
            <description summary="all possible states of content for a surface"/>
            <entry name="content_available" value="1"
                   summary="application provided wl_surface for this surface"/>
            <entry name="content_removed" value="2"
                   summary="wl_surface was removed for this surface"/>
        </enum>

        <event name="content">
            <description summary="content state for surface has changed"/>
            <arg name="content_state" type="int"/>
        </event>

        <request name="set_input_focus">
            <description summary="set input_focus to this surface to direct non-graphical inputs (e.g. keyboard) to application providing this surface"/>
            <arg name="enabled" type="int"/>
        </request>

        <event name="input_focus">
            <description summary="received if input focus of surface has changed"/>
            <arg name="enabled" type="int"/>
        </event>

    </interface>

    <interface name="ivi_controller_layer" version="1">
        <description summary="Request property change of ivi_layer and add/remove ivi_surface from ivi_layer to server"/>

        <request name="set_visibility">
            <description summary="Set Visibility"/>
            <arg name="visibility" type="uint"/>
        </request>

        <request name="set_opacity">
            <description summary="Set Opacity"/>
            <arg name="opacity" type="fixed"/>
        </request>

        <request name="set_source_rectangle">
            <description summary="Set the area of layer which should be used for the rendering">
                x:      horizontal start position of the used area
                y:      vertical start position of the used area
                width : width of the area
                height: height of the area
            </description>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </request>

        <request name="set_destination_rectangle">
            <description summary="Set the destination area on the display for a layer">
                Set the destination area on the display for a layer. The layer will be scaled and positioned to this rectangle for rendering
                x:      horizontal start position of the used area
                y:      vertical start position of the used area
                width : width of the area
                height: height of the area
            </description>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </request>

        <request name="set_configuration">
            <description summary="Set new configuration for layer"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </request>

        <request name="set_orientation">
            <description summary="Set Orientation"/>
            <arg name="orientation" type="int"/>
        </request>

        <request name="screenshot">
            <description summary="Take screenshot"/>
            <arg name="filename" type="string"/>
        </request>

        <request name="clear_surfaces">
            <description summary="remove all ivi_surfaces from a layer"/>
        </request>

        <request name="add_surface">
            <description summary="add a ivi_surface to top order of a ivi_layer"/>
            <arg name="surface" type="object" interface="ivi_controller_surface"/>
        </request>

        <request name="remove_surface">
            <description summary="remove a ivi_surface from a layer"/>
            <arg name="surface" type="object" interface="ivi_controller_surface"/>
        </request>

        <request name="set_render_order">
            <description summary="Set Render Order"/>
            <arg name="id_surfaces" type="array"/>
        </request>

        <event name="visibility">
            <description summary="sent in response to set_visibility"/>
            <arg name="visibility" type="int"/>
        </event>

        <event name="opacity">
            <description summary="sent in response to set_opacity"/>
            <arg name="opacity" type="fixed"/>
        </event>

        <event name="source_rectangle">
            <description summary="sent in response to set_source_rectangle"/>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </event>

        <event name="destination_rectangle">
            <description summary="sent in response to set_destination_rectangle"/>
            <arg name="x" type="int"/>
            <arg name="y" type="int"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </event>

        <event name="configuration">
            <description summary="sent in response to set_configuration"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
        </event>

        <event name="orientation">
            <description summary="sent in response to set_orientation"/>
            <arg name="orientation" type="int"/>
        </event>

        <event name="screen">
            <description summary="Receive a wl_output this ivi_layer belongs"/>
            <arg name="screen" type="object" interface="wl_output" allow-null="true"/>
        </event>

        <request name="destroy" type="destructor">
            <description summary="destroy ivi_controller_layer"/>
            <arg name="destroy_scene_object" type="int"/>
        </request>

        <event name="destroyed">
            <description summary="destroyed layer event"/>
        </event>

    </interface>

    <interface name="ivi_controller_screen" version="1">
        <description summary="Request add/remove layer from ivi_layer to server"/>

        <request name="destroy" type="destructor">
            <description summary="destroy ivi_controller_screen"/>
        </request>

        <request name="clear">
            <description summary="remove all ivi_layers from wl_output"/>
        </request>

        <request name="add_layer">
            <description summary="add a ivi_layer to top order of a wl_output"/>
            <arg name="layer" type="object" interface="ivi_controller_layer"/>
        </request>

        <request name="screenshot">
            <description summary="Take screenshot"/>
            <arg name="filename" type="string"/>
        </request>

        <request name="set_render_order">
            <description summary="Set Render Order"/>
            <arg name="id_layers" type="array"/>
        </request>

    </interface>

    <interface name="ivi_controller" version="1">
        <description summary="Interface for central controller of layers and surfaces"/>

        <request name="commit_changes">
            <description summary="commit changes and request done by client"/>
        </request>

        <event name="screen">
            <description summary="Receive new additional screen controller"/>
            <arg name="id_screen" type="uint"/>
            <arg name="screen" type="new_id" interface="ivi_controller_screen"/>
        </event>

        <request name="layer_create">
            <description summary="ilm_layerCreateWithDimension"/>
            <arg name="id_layer" type="uint"/>
            <arg name="width" type="int"/>
            <arg name="height" type="int"/>
            <arg name="id" type="new_id" interface="ivi_controller_layer"/>
        </request>

        <event name="layer">
            <description summary="Receive id_layer and a layer controller"/>
            <arg name="id_layer" type="uint"/>
        </event>

        <request name="surface_create">
            <description summary="create surface controller"/>
            <arg name="id_surface" type="uint"/>
            <arg name="id" type="new_id" interface="ivi_controller_surface"/>
        </request>

        <event name="surface">
            <description summary="Receive id_surface and a controller to control ivi_surface"/>
            <arg name="id_surface" type="uint"/>
        </event>

        <enum name="object_type">
            <description summary="available object types in ivi compositor scene"/>
            <entry name="surface" value="1" summary="surface object type"/>
            <entry name="layer"   value="2" summary="layer object type"/>
            <entry name="screen"  value="3" summary="screen object type"/>
        </enum>

        <enum name="error_code">
            <description summary="possible error codes returned in error event"/>
            <entry name="unknown_error" value="1" summary="unknown error encountered"/>
            <entry name="file_error"    value="2" summary="file i/o error encountered"/>
        </enum>

        <event name="error">
            <description summary="request resulted in server-side error"/>
            <arg name="object_id" type="int"/>
            <arg name="object_type" type="int"/>
            <arg name="error_code" type="int"/>
            <arg name="error_text" type="string" allow-null="true"/>
        </event>

    </interface>

</protocol>

